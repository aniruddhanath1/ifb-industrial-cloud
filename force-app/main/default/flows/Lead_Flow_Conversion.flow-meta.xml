<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Auto_convert</name>
        <label>Auto convert</label>
        <locationX>50</locationX>
        <locationY>1895</locationY>
        <actionName>LeadConversion</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Check_isconverted</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>AccountId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>leadId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>LeadConversion</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>AccountId</assignToReference>
            <name>accountId</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>ContactId</assignToReference>
            <name>contactId</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Copy_1_of_Auto_convert</name>
        <label>Copy 1 of Auto convert</label>
        <locationX>644</locationX>
        <locationY>971</locationY>
        <actionName>LeadConversion</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Check_Rating_for_Conversion</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>Getting_Existing_Account_records.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>leadId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>LeadConversion</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Copy_2_of_Auto_convert</name>
        <label>Auto convert</label>
        <locationX>314</locationX>
        <locationY>1895</locationY>
        <actionName>LeadConversion</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Check_isconverted</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>leadId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>LeadConversion</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>AccountId</assignToReference>
            <name>accountId</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>ContactId</assignToReference>
            <name>contactId</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Copy_3_of_Auto_convert</name>
        <label>Auto convert</label>
        <locationX>578</locationX>
        <locationY>1895</locationY>
        <actionName>LeadConversion</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Check_isconverted</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>AccountId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>leadId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>LeadConversion</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>AccountId</assignToReference>
            <name>accountId</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>ContactId</assignToReference>
            <name>contactId</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Copy_4_of_Auto_convert</name>
        <label>Auto convert</label>
        <locationX>842</locationX>
        <locationY>1895</locationY>
        <actionName>LeadConversion</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Check_isconverted</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>leadId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>LeadConversion</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>AccountId</assignToReference>
            <name>accountId</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>ContactId</assignToReference>
            <name>contactId</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Account</name>
        <label>Account</label>
        <locationX>578</locationX>
        <locationY>1463</locationY>
        <assignmentItems>
            <assignToReference>AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Account.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Contact</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Account_to_Expense</name>
        <label>Assign Account to Expense</label>
        <locationX>534</locationX>
        <locationY>2927</locationY>
        <assignmentItems>
            <assignToReference>Expense.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Iterating_over_Expense.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Expense.Account__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ConvertedAccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>MultipleExpense</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Expense</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterating_over_Expense</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Lead_Values_to_Account</name>
        <label>Assign Lead Values to Account</label>
        <locationX>446</locationX>
        <locationY>3851</locationY>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.BillingStreet</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Street</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.BillingCity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.City</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.BillingState</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.State</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.BillingPostalCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.BillingCountry</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.Bill_To_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Bill_To_Name__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.Ship_to_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Ship_to_Name__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.ShippingStreet</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Shipping__Street__s</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.ShippingCity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Shipping__City__s</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.ShippingState</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.State</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.ShippingPostalCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Shipping__PostalCode__s</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.ShippingCountry</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Converted_Accounts.Shipping_Address_Same_as_Billing_Address__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Shipping_Address_Same_As_Billing_Address__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Related_Account</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assigning_value_to_visit</name>
        <label>Assigning value to visit</label>
        <locationX>534</locationX>
        <locationY>2411</locationY>
        <assignmentItems>
            <assignToReference>Visits.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ConvertedAccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Visits.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Iterating_over_visit_record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>MultipleVisits</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Visits</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterating_over_visit_record</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assigning_values_to_contact</name>
        <label>Assigning values to contact</label>
        <locationX>534</locationX>
        <locationY>3443</locationY>
        <assignmentItems>
            <assignToReference>Contacts.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ConvertedAccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Contacts.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Iterating_over_the_contact_records.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Contacts.MailingStreet</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Street</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Contacts.MailingCity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.City</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Contacts.MailingState</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.State</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Contacts.MailingPostalCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Contacts.MailingCountry</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Country</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>MultipleContacts</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Contacts</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterating_over_the_contact_records</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Contact</name>
        <label>Contact</label>
        <locationX>578</locationX>
        <locationY>1679</locationY>
        <assignmentItems>
            <assignToReference>ContactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Contact.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_If_Account_And_Contact_Exist</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_If_Account_And_Contact_Exist</name>
        <label>Check If Account And Contact Exist</label>
        <locationX>578</locationX>
        <locationY>1787</locationY>
        <defaultConnector>
            <targetReference>Check_isconverted</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Account_and_Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Auto_convert</targetReference>
            </connector>
            <label>Is Account and Contact?</label>
        </rules>
        <rules>
            <name>No_account_and_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_2_of_Auto_convert</targetReference>
            </connector>
            <label>No account and contact</label>
        </rules>
        <rules>
            <name>Only_account_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_3_of_Auto_convert</targetReference>
            </connector>
            <label>Only account exist</label>
        </rules>
        <rules>
            <name>Only_contact_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_4_of_Auto_convert</targetReference>
            </connector>
            <label>Only contact exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_isconverted</name>
        <label>Check isconverted</label>
        <locationX>578</locationX>
        <locationY>2087</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IsConvert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsConverted</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Visit_Records</targetReference>
            </connector>
            <label>IsConvert</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Rating_for_Conversion</name>
        <label>Check Rating for Conversion</label>
        <locationX>930</locationX>
        <locationY>1247</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_Rating</name>
            <conditionLogic>(4 AND 6 AND (1 OR 2 OR 3)) OR (5 AND 6 AND (1 OR 2 OR 3)) OR 7</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Rating</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hot</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Rating</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Warm</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Rating</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsCreated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsUpdated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ConversionCheck__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Budgetary_Quote__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Account</targetReference>
            </connector>
            <label>Check Rating</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_account_exist</name>
        <label>If account exist</label>
        <locationX>776</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>Check_Rating_for_Conversion</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Account_record_is_there</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Getting_Existing_Account_records</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Auto_convert</targetReference>
            </connector>
            <label>Account record is there</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsActive</name>
        <label>IsActive</label>
        <locationX>1238</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IsmetaDataTrue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Custom_MetaData.Active__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Adobe_Sync__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lead_is_Created_or_Updated</targetReference>
            </connector>
            <label>IsmetaDataTrue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Lead_is_Created_or_Updated</name>
        <label>Lead is Created or Updated</label>
        <locationX>930</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Check_Rating_for_Conversion</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Lead_Created</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsCreated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getting_record_Type_for_Provisional_account</targetReference>
            </connector>
            <label>Lead Created</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CheckforCold</name>
        <dataType>Boolean</dataType>
        <expression>{!$Record.Lead_Score__c} &gt;= 30 &amp;&amp; {!$Record.Lead_Score__c} &lt; 70</expression>
    </formulas>
    <formulas>
        <name>Checkforhot</name>
        <dataType>Boolean</dataType>
        <expression>{!$Record.Lead_Score__c} = 100</expression>
    </formulas>
    <formulas>
        <name>CheckforWarm</name>
        <dataType>Boolean</dataType>
        <expression>{!$Record.Lead_Score__c} &gt;= 70 &amp;&amp; {!$Record.Lead_Score__c} &lt; 100</expression>
    </formulas>
    <formulas>
        <name>CheckRatingforlessthan30</name>
        <dataType>Boolean</dataType>
        <expression>{!$Record.Lead_Score__c} &gt;= 0 &amp;&amp; {!$Record.Lead_Score__c} &lt; 30</expression>
    </formulas>
    <formulas>
        <name>IsCreated</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>IsUpdated</name>
        <dataType>Boolean</dataType>
        <expression>NOT(ISNEW())</expression>
    </formulas>
    <formulas>
        <name>ItIsUserID</name>
        <dataType>Boolean</dataType>
        <expression>BEGINS({!$Record.OwnerId}, &quot;005&quot;)</expression>
    </formulas>
    <formulas>
        <name>leadIsCreated</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>TaskDueDate</name>
        <dataType>Date</dataType>
        <expression>{!$Flow.CurrentDate}+1</expression>
    </formulas>
    <interviewLabel>Lead Flow Conversion {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Lead Flow Conversion</label>
    <loops>
        <name>Iterating_over_Expense</name>
        <label>Iterating over Expense</label>
        <locationX>446</locationX>
        <locationY>2819</locationY>
        <collectionReference>Get_Expense</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Account_to_Expense</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Expense</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Iterating_over_the_contact_records</name>
        <label>Iterating over the contact records</label>
        <locationX>446</locationX>
        <locationY>3335</locationY>
        <collectionReference>Getting_Contact_records</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assigning_values_to_contact</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Updating_contact</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Iterating_over_visit_record</name>
        <label>Iterating over visit record</label>
        <locationX>446</locationX>
        <locationY>2303</locationY>
        <collectionReference>Get_Visit_Records</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assigning_value_to_visit</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Visit_records</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Custom_MetaData</name>
        <label>Custom MetaData</label>
        <locationX>1238</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsActive</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>flow_active</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>org_specific_setting__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>578</locationX>
        <locationY>1355</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>Contains</operator>
            <value>
                <elementReference>$Record.Company</elementReference>
            </value>
        </filters>
        <filters>
            <field>BillingPostalCode</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Contact</name>
        <label>Get Contact</label>
        <locationX>578</locationX>
        <locationY>1571</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Contact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Lead__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Converted_Accounts</name>
        <label>Get Converted Accounts</label>
        <locationX>446</locationX>
        <locationY>3743</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Lead_Values_to_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Expense</name>
        <label>Get Expense</label>
        <locationX>446</locationX>
        <locationY>2711</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Iterating_over_Expense</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Lead__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Lead__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Expense__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Visit_Records</name>
        <label>Get Visit Records</label>
        <locationX>446</locationX>
        <locationY>2195</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Iterating_over_visit_record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Lead__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Lead__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Visit</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Getting_Contact_records</name>
        <label>Getting Contact records</label>
        <locationX>446</locationX>
        <locationY>3227</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Iterating_over_the_contact_records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Lead__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Lead__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Getting_Existing_Account_records</name>
        <label>Getting Existing Account records</label>
        <locationX>776</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>If_account_exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Company</elementReference>
            </value>
        </filters>
        <filters>
            <field>BillingPostalCode</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.PostalCode</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>getting_record_Type_for_Provisional_account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getting_record_Type_for_Provisional_account</name>
        <label>getting record Type for Provisional account</label>
        <locationX>776</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Getting_Existing_Account_records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Provisional_Account</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Account</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Expense</name>
        <label>Update Expense</label>
        <locationX>446</locationX>
        <locationY>3119</locationY>
        <connector>
            <targetReference>Getting_Contact_records</targetReference>
        </connector>
        <inputReference>MultipleExpense</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Related_Account</name>
        <label>Update Related Account</label>
        <locationX>446</locationX>
        <locationY>3959</locationY>
        <inputReference>Get_Converted_Accounts</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Visit_records</name>
        <label>Update Visit records</label>
        <locationX>446</locationX>
        <locationY>2603</locationY>
        <connector>
            <targetReference>Get_Expense</targetReference>
        </connector>
        <inputReference>MultipleVisits</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Updating_contact</name>
        <label>Updating contact</label>
        <locationX>446</locationX>
        <locationY>3635</locationY>
        <connector>
            <targetReference>Get_Converted_Accounts</targetReference>
        </connector>
        <inputReference>MultipleContacts</inputReference>
    </recordUpdates>
    <start>
        <locationX>1112</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Custom_MetaData</targetReference>
        </connector>
        <object>Lead</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>NotificationBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Name - {!$Record.FirstName} {!$Record.LastName}.</text>
    </textTemplates>
    <textTemplates>
        <name>UrgentLeadCustomNotification</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>This is an Urgent Lead, needs your attention
Lead Name - {!$Record.LastName}
Email - {!$Record.Email}
Phone - {!$Record.Phone}</text>
    </textTemplates>
    <triggerOrder>4</triggerOrder>
    <variables>
        <name>AccountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ContactId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Contacts</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>Expense</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Expense__c</objectType>
    </variables>
    <variables>
        <name>MultipleContacts</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>MultipleExpense</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Expense__c</objectType>
    </variables>
    <variables>
        <name>MultipleVisits</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Visit</objectType>
    </variables>
    <variables>
        <name>Recipeintid</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UrgentLeadIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>Visits</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Visit</objectType>
    </variables>
</Flow>
