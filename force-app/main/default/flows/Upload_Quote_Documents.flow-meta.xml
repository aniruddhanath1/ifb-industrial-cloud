<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <name>AcknoweledgementthereInvoice</name>
        <label>AcknoweledgementInvoice</label>
        <locationX>182</locationX>
        <locationY>1850</locationY>
        <defaultConnector>
            <targetReference>Acknowledgement</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>AcknoweledgementThereis</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AcknoweledgeInvoiceIsThere</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Updating_Content_Document_Name</targetReference>
            </connector>
            <label>AcknoweledgementThere</label>
        </rules>
    </decisions>
    <decisions>
        <name>Acknowledgement</name>
        <label>Acknowledgement</label>
        <locationX>182</locationX>
        <locationY>2150</locationY>
        <defaultConnector>
            <targetReference>UndertakingIsTherealready</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>AcknowledgementPresent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AcknoledgementIsThere</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Updating_Content_Doc</targetReference>
            </connector>
            <label>AcknowledgementPresent</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_5</name>
        <label>Invalidation Letter is Present</label>
        <locationX>182</locationX>
        <locationY>1550</locationY>
        <defaultConnector>
            <targetReference>AcknoweledgementthereInvoice</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>InvalidationLetter</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>InvalidationLetterIsThere</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Updating_Content_Document_Name</targetReference>
            </connector>
            <label>InvalidationLetter</label>
        </rules>
    </decisions>
    <decisions>
        <name>EPCGDocumentThere</name>
        <label>EPCGDocumentIsThere</label>
        <locationX>182</locationX>
        <locationY>650</locationY>
        <defaultConnector>
            <targetReference>FormAIsPresent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>DocumentIsThere</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>EPCGDocumentIsThere</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Updating_Content_Document_Name</targetReference>
            </connector>
            <label>DocumentIsThere</label>
        </rules>
    </decisions>
    <decisions>
        <name>FormA1IsPresent</name>
        <label>FormA1IsPresent</label>
        <locationX>182</locationX>
        <locationY>1250</locationY>
        <defaultConnector>
            <targetReference>Decision_5</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>FormA1Is</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>FormA1IsThere</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Copy_1_of_Copy_1_of_Updating_Content_Document_Name</targetReference>
            </connector>
            <label>FormA1IsPresent</label>
        </rules>
    </decisions>
    <decisions>
        <name>FormAIsPresent</name>
        <label>FormAIsPresent</label>
        <locationX>182</locationX>
        <locationY>950</locationY>
        <defaultConnector>
            <targetReference>FormA1IsPresent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>FormA</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>FormAIsThere</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Copy_1_of_Updating_Content_Document_Name</targetReference>
            </connector>
            <label>FormA</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_Advance_Authorisation_is_Uploaded</name>
        <label>If Advance Authorisation is Uploaded</label>
        <locationX>182</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>EPCGDocumentThere</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Advance_Authorisation_is_there</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AdvanceAuthorisationIsThere</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Updating_Content_Document_Name</targetReference>
            </connector>
            <label>Advance Authorisation is there</label>
        </rules>
    </decisions>
    <decisions>
        <name>UndertakingIsTherealready</name>
        <label>UndertakingIsThere</label>
        <locationX>182</locationX>
        <locationY>2450</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>UndertakingPresent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>UndertakingIsThere</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Updating_C</targetReference>
            </connector>
            <label>UndertakingPresent</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>AcknoledgementIsThere</name>
        <dataType>Boolean</dataType>
        <expression>IF(LEN({!Acknowledgement_by_the_Jurisdictional_Tax_Officer.contentDocIds})&gt; 2, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>AcknologementName2</name>
        <dataType>String</dataType>
        <expression>&quot;Acknowledgement &quot; &amp; SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()), &quot; &quot;, &quot;&quot;), &quot;-&quot;, &quot;&quot;), &quot;:&quot;, &quot;&quot;), &quot;Z&quot;, &quot;&quot;) &amp; &quot;_&quot; &amp; SUBSTITUTE({!Acknowledgement_by_the_Jurisdictional_Tax_Officer.title}, &quot; &quot;, &quot;_&quot;)</expression>
    </formulas>
    <formulas>
        <name>AcknoweledgeInvoiceIsThere</name>
        <dataType>Boolean</dataType>
        <expression>IF(LEN({!Acknowledged_Invoice.contentDocIds})&gt; 2, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>AdvanceAcknolodgmentName</name>
        <dataType>String</dataType>
        <expression>&quot;Advance Acknowledged Invoice&quot; &amp; SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()), &quot; &quot;, &quot;&quot;), &quot;-&quot;, &quot;&quot;), &quot;:&quot;, &quot;&quot;), &quot;Z&quot;, &quot;&quot;) &amp; &quot;_&quot; &amp; SUBSTITUTE({!Acknowledged_Invoice.contentDocIds}, &quot; &quot;, &quot;_&quot;)</expression>
    </formulas>
    <formulas>
        <name>AdvanceAuthorisationIsThere</name>
        <dataType>Boolean</dataType>
        <expression>IF(LEN({!Advance_Authorisation.contentDocIds})&gt; 2, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>AdvanceAuthorisationName</name>
        <dataType>String</dataType>
        <expression>&quot;Advance Authorisation&quot; &amp; SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()), &quot; &quot;, &quot;&quot;), &quot;-&quot;, &quot;&quot;), &quot;:&quot;, &quot;&quot;), &quot;Z&quot;, &quot;&quot;) &amp; &quot;_&quot; &amp; SUBSTITUTE({!Advance_Authorisation.title}, &quot; &quot;, &quot;_&quot;)</expression>
    </formulas>
    <formulas>
        <name>EPCGDocumentIsThere</name>
        <dataType>Boolean</dataType>
        <expression>IF(LEN({!EPCG_Certificate.contentDocIds})&gt; 2, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>EPCGName</name>
        <dataType>String</dataType>
        <expression>&quot;EPCG&quot; &amp; SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()), &quot; &quot;, &quot;&quot;), &quot;-&quot;, &quot;&quot;), &quot;:&quot;, &quot;&quot;), &quot;Z&quot;, &quot;&quot;) &amp; &quot;_&quot; &amp; SUBSTITUTE({!EPCG_Certificate.title}, &quot; &quot;, &quot;_&quot;)</expression>
    </formulas>
    <formulas>
        <name>FormA1IsThere</name>
        <dataType>Boolean</dataType>
        <expression>IF(LEN({!Form_A1.contentDocIds})&gt; 2, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>FormA1Name</name>
        <dataType>String</dataType>
        <expression>&quot;Form A1&quot; &amp; SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()), &quot; &quot;, &quot;&quot;), &quot;-&quot;, &quot;&quot;), &quot;:&quot;, &quot;&quot;), &quot;Z&quot;, &quot;&quot;) &amp; &quot;_&quot; &amp; SUBSTITUTE({!Form_A1.title}, &quot; &quot;, &quot;_&quot;)</expression>
    </formulas>
    <formulas>
        <name>FormAIsThere</name>
        <dataType>Boolean</dataType>
        <expression>IF(LEN({!Form_A.contentDocIds})&gt; 2, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>FormAName</name>
        <dataType>String</dataType>
        <expression>&quot;Form A&quot; &amp; SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()), &quot; &quot;, &quot;&quot;), &quot;-&quot;, &quot;&quot;), &quot;:&quot;, &quot;&quot;), &quot;Z&quot;, &quot;&quot;) &amp; &quot;_&quot; &amp; SUBSTITUTE({!Form_A.title}, &quot; &quot;, &quot;_&quot;)</expression>
    </formulas>
    <formulas>
        <name>InvalidationLetterIsThere</name>
        <dataType>Boolean</dataType>
        <expression>IF(LEN({!Invalidation_Letter.contentDocIds})&gt; 2, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>InvalidationLetterName</name>
        <dataType>String</dataType>
        <expression>&quot;Invalidation Letter&quot; &amp; SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()), &quot; &quot;, &quot;&quot;), &quot;-&quot;, &quot;&quot;), &quot;:&quot;, &quot;&quot;), &quot;Z&quot;, &quot;&quot;) &amp; &quot;_&quot; &amp; SUBSTITUTE({!Invalidation_Letter.title}, &quot; &quot;, &quot;_&quot;)</expression>
    </formulas>
    <formulas>
        <name>UndertakingIsThere</name>
        <dataType>Boolean</dataType>
        <expression>IF(LEN({!Undertaking.contentDocIds})&gt; 2, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>UnderTakingName</name>
        <dataType>String</dataType>
        <expression>&quot;Undertaking by the recipient&quot; &amp; SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()), &quot; &quot;, &quot;&quot;), &quot;-&quot;, &quot;&quot;), &quot;:&quot;, &quot;&quot;), &quot;Z&quot;, &quot;&quot;) &amp; &quot;_&quot; &amp; SUBSTITUTE({!Undertaking.title}, &quot; &quot;, &quot;_&quot;)</expression>
    </formulas>
    <interviewLabel>Upload Quote Documents {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Upload Quote Documents</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>getting_Opportunity_record</name>
        <label>getting Opportunity record</label>
        <locationX>182</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Upload_Documents</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Updating_C</name>
        <label>Copy 1 of Copy 1 of Copy 1 of Copy 1 of Copy 1 of Copy 1 of Copy 1 of Updating Content Document Name</label>
        <locationX>50</locationX>
        <locationY>2558</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Undertaking.recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>UnderTakingName</elementReference>
            </value>
        </inputAssignments>
        <object>ContentDocument</object>
    </recordUpdates>
    <recordUpdates>
        <name>Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Updating_Content_Doc</name>
        <label>Copy 1 of Copy 1 of Copy 1 of Copy 1 of Copy 1 of Copy 1 of Updating Content Document Name</label>
        <locationX>50</locationX>
        <locationY>2258</locationY>
        <connector>
            <targetReference>UndertakingIsTherealready</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Acknowledgement_by_the_Jurisdictional_Tax_Officer.recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>AcknologementName2</elementReference>
            </value>
        </inputAssignments>
        <object>ContentDocument</object>
    </recordUpdates>
    <recordUpdates>
        <name>Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Updating_Content_Document_Name</name>
        <label>Copy 1 of Copy 1 of Copy 1 of Copy 1 of Copy 1 of Updating Content Document Name</label>
        <locationX>50</locationX>
        <locationY>1958</locationY>
        <connector>
            <targetReference>Acknowledgement</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Acknowledged_Invoice.recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>AdvanceAcknolodgmentName</elementReference>
            </value>
        </inputAssignments>
        <object>ContentDocument</object>
    </recordUpdates>
    <recordUpdates>
        <name>Copy_1_of_Copy_1_of_Copy_1_of_Copy_1_of_Updating_Content_Document_Name</name>
        <label>Copy 1 of Copy 1 of Copy 1 of Copy 1 of Updating Content Document Name</label>
        <locationX>50</locationX>
        <locationY>1658</locationY>
        <connector>
            <targetReference>AcknoweledgementthereInvoice</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Invalidation_Letter.recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>InvalidationLetterName</elementReference>
            </value>
        </inputAssignments>
        <object>ContentDocument</object>
    </recordUpdates>
    <recordUpdates>
        <name>Copy_1_of_Copy_1_of_Copy_1_of_Updating_Content_Document_Name</name>
        <label>Copy 1 of Copy 1 of Copy 1 of Updating Content Document Name</label>
        <locationX>50</locationX>
        <locationY>1358</locationY>
        <connector>
            <targetReference>Decision_5</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Form_A1.recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>FormA1Name</elementReference>
            </value>
        </inputAssignments>
        <object>ContentDocument</object>
    </recordUpdates>
    <recordUpdates>
        <name>Copy_1_of_Copy_1_of_Updating_Content_Document_Name</name>
        <label>Copy 1 of Copy 1 of Updating Content Document Name</label>
        <locationX>50</locationX>
        <locationY>1058</locationY>
        <connector>
            <targetReference>FormA1IsPresent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Form_A.recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>FormAIsThere</elementReference>
            </value>
        </inputAssignments>
        <object>ContentDocument</object>
    </recordUpdates>
    <recordUpdates>
        <name>Copy_1_of_Updating_Content_Document_Name</name>
        <label>Copy 1 of Updating Content Document Name</label>
        <locationX>50</locationX>
        <locationY>758</locationY>
        <connector>
            <targetReference>FormAIsPresent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>EPCG_Certificate.recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>AdvanceAuthorisationName</elementReference>
            </value>
        </inputAssignments>
        <object>ContentDocument</object>
    </recordUpdates>
    <recordUpdates>
        <name>Updating_Content_Document_Name</name>
        <label>Updating Content Document Name</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <connector>
            <targetReference>EPCGDocumentThere</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Advance_Authorisation.recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>AdvanceAuthorisationName</elementReference>
            </value>
        </inputAssignments>
        <object>ContentDocument</object>
    </recordUpdates>
    <screens>
        <name>Upload_Documents</name>
        <label>Upload Documents</label>
        <locationX>182</locationX>
        <locationY>242</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>If_Advance_Authorisation_is_Uploaded</targetReference>
        </connector>
        <fields>
            <name>Advance_Authorisation</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Advance Authorisation Certificate</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <styleProperties>
                <verticalAlignment>
                    <stringValue>top</stringValue>
                </verticalAlignment>
                <width>
                    <stringValue>12</stringValue>
                </width>
            </styleProperties>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getting_Opportunity_record.Quote_Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>EPCG</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>EPCG_Certificate</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>EPCG Certificate</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <styleProperties>
                <verticalAlignment>
                    <stringValue>top</stringValue>
                </verticalAlignment>
                <width>
                    <stringValue>12</stringValue>
                </width>
            </styleProperties>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getting_Opportunity_record.Quote_Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>EPCG</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Form_A</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Form A</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <styleProperties>
                <verticalAlignment>
                    <stringValue>top</stringValue>
                </verticalAlignment>
                <width>
                    <stringValue>12</stringValue>
                </width>
            </styleProperties>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getting_Opportunity_record.Quote_Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>EOU/STP/EHTP/BTP</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Form_A1</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Form A1</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <styleProperties>
                <verticalAlignment>
                    <stringValue>top</stringValue>
                </verticalAlignment>
                <width>
                    <stringValue>12</stringValue>
                </width>
            </styleProperties>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getting_Opportunity_record.Quote_Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>SEZ</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Invalidation_Letter</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Invalidation Letter</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <styleProperties>
                <verticalAlignment>
                    <stringValue>top</stringValue>
                </verticalAlignment>
                <width>
                    <stringValue>12</stringValue>
                </width>
            </styleProperties>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>getting_Opportunity_record.Quote_Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Deemed Exports</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>getting_Opportunity_record.Quote_Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>EPCG</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Acknowledgement_by_the_Jurisdictional_Tax_Officer</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Acknowledgement by the Jurisdictional Tax Officer</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <styleProperties>
                <verticalAlignment>
                    <stringValue>top</stringValue>
                </verticalAlignment>
                <width>
                    <stringValue>12</stringValue>
                </width>
            </styleProperties>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getting_Opportunity_record.Quote_Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>EPCG</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Acknowledged_Invoice</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Acknowledged Invoice by the receiver of goods</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <styleProperties>
                <verticalAlignment>
                    <stringValue>top</stringValue>
                </verticalAlignment>
                <width>
                    <stringValue>12</stringValue>
                </width>
            </styleProperties>
        </fields>
        <fields>
            <name>Undertaking</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Undertaking by the recipient that not ITC</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <styleProperties>
                <verticalAlignment>
                    <stringValue>top</stringValue>
                </verticalAlignment>
                <width>
                    <stringValue>12</stringValue>
                </width>
            </styleProperties>
        </fields>
        <nextOrFinishButtonLabel>Upload</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getting_Opportunity_record</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
